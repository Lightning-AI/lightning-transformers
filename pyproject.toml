[build-system]
requires = [
    "setuptools",
    "wheel",
]

[tool.black]
# https://github.com/psf/black
line-length = 120
exclude = "(.eggs|.git|.hg|.mypy_cache|.venv|_build|buck-out|build|dist)"

[tool.isort]
known_first_party = [
    "lightning_transformers",
    "tests",
    "conf",
    "examples",
]
skip_glob = []
profile = "black"
line_length = 120

[tool.mypy]
files = [
    "lightning_transformers",
]
install_types = "True"
non_interactive = "True"
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
show_error_codes = "True"
warn_redundant_casts = "True"
warn_unused_configs = "True"
warn_unused_ignores = "True"
allow_redefinition = "True"
# disable this rule as the Trainer attributes are defined in the connectors, not in its __init__
disable_error_code = "attr-defined"
# style choices
warn_no_return = "False"

# Ignore mypy errors for these files
# TODO: the goal is for this to be empty
[[tool.mypy.overrides]]
# the list can be generated with:
# mypy --no-error-summary 2>&1 | tr ':' ' ' | awk '{print $1}' | sort | uniq | sed 's/\.py//g; s|src/||g;  s|\/|\.|g' | xargs -I {} echo '"{}",'
module = [
    "lightning_transformers.task.nlp.summarization.datasets.cnn_dailymail",
    "lightning_transformers.core.utils",
    "lightning_transformers.task.nlp.multiple_choice.utils",
    "lightning_transformers.core.iterable",
    "lightning_transformers.core.seq2seq.utils",
    "lightning_transformers.task.nlp.question_answering.datasets.squad.metric",
    "lightning_transformers.task.nlp.question_answering.datasets.squad.data",
    "lightning_transformers.task.nlp.multiple_choice.datasets.swag.data",
    "lightning_transformers.utilities.deepspeed",
    "lightning_transformers.task.nlp.question_answering.datasets.squad.processing",
    "lightning_transformers.core.loggers",
    "lightning_transformers.core.finetuning",
    "lightning_transformers.core.data",
    "lightning_transformers.core.model",
    "lightning_transformers.callbacks.sparseml",
    "lightning_transformers.task.vision.image_classification.model",
    "lightning_transformers.task.vision.image_classification.data",
    "lightning_transformers.task.nlp.token_classification.model",
    "lightning_transformers.task.nlp.token_classification.data",
    "lightning_transformers.task.nlp.text_classification.model",
    "lightning_transformers.task.nlp.text_classification.data",
    "lightning_transformers.task.nlp.question_answering.model",
    "lightning_transformers.task.nlp.question_answering.data",
    "lightning_transformers.task.nlp.multiple_choice.model",
    "lightning_transformers.task.nlp.multiple_choice.data",
    "lightning_transformers.task.nlp.masked_language_modeling.model",
    "lightning_transformers.task.nlp.masked_language_modeling.data",
    "lightning_transformers.task.nlp.language_modeling.model",
    "lightning_transformers.task.nlp.language_modeling.data",
    "lightning_transformers.plugins.checkpoint",
    "lightning_transformers.core.seq2seq.finetuning",
    "lightning_transformers.core.seq2seq.data",
    "lightning_transformers.task.nlp.translation.model",
    "lightning_transformers.task.nlp.translation.data",
    "lightning_transformers.task.nlp.summarization.model",
]
ignore_errors = "True"

